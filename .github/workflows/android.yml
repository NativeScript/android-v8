name: Build for Android

on: [workflow_dispatch]

jobs:
  build:
    strategy:
      # max-parallel: 1
      matrix:
        # arch: ['arm' ,'arm64' ,'x86' ,'x64']
        arch: ['arm']
    runs-on: ubuntu-latest
    name: ${{ matrix.arch }}
    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: UTC
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      USE_CCACHE: 1
    container:
      image: kudo/ubuntu-nonroot:20.04
    steps:
      - name: Setup docker workspace
        run: |
            sudo sh -c "chown -R ubuntu $HOME"
            sudo sh -c "chmod 777 $GITHUB_WORKSPACE"
            # sudo sh -c "chmod 777 $GITHUB_WORKSPACE/../../_temp"
            sudo sh -c "chmod 777 /home"

      - uses: actions/checkout@v2

      - name: Setup Ubuntu environment
        run: |
          sudo ln -fs /usr/share/zoneinfo/UTC /etc/localtime
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y sudo apt-utils sudo ccache lsb-core git python nodejs npm wget openjdk-8-jre openjdk-8-jdk
          git config --global user.email "git@job.com"; git config --global user.name "GitJob"

      - name: Setup Build  V8
        run: |
          ./scripts/setup-build.sh android
          sudo apt-get install -y libatomic1-i386-cross && sudo sh -c 'echo "/usr/i686-linux-gnu/lib" >> /etc/ld.so.conf.d/i386-linux-gnu.conf' && sudo ldconfig

      - name: Retrieve ccache
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-ccache-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-${{ matrix.arch }}-
            ${{ runner.os }}-ccache-

      - name: Build
        run: ./scripts/build.android.sh -l ${{ matrix.arch }}

      - name: Show summary of ccache configuration and statistics counters
        run: ccache --show-stats

      - name: Archive Build
        uses: actions/upload-artifact@v2
        with:
          name: libv8-release-${{ matrix.arch }}
          path: |
            dist/${{ matrix.arch }}-release/**
            v8/outgn/${{ matrix.arch }}-release/gen
            v8/outgn/${{ matrix.arch }}-release/gen/embedded.S
            v8/outgn/${{ matrix.arch }}-release/gen/snapshot.cc
